{
	"create_container": "Create Container",
	"create": "Create {{type}}",
	"source": {
		"title": "Source",
		"description": "Set up the repository, branch and root folder (if you have a monorepo) of your application source code and Dockerfile that will be downloaded and used to build the Docker image",
		"repoType": "Repository Type",
		"repo": "Source Repo",
		"branch": "Branch",
		"rootDirectory": "Path",
		"rootDirectoryHelp": "If you have a monorepo where you maintain code for multiple apps such as backend and frontend then this is the path of the app that you would like to link this deployment to (e.g. /frontend)",
		"dockerFile": "Docker File",
		"dockerFileHelp": "The name of the Docker file that will be used to create the Docker image of your app.",
		"connect_github": "Connect your GibHub Account"
	},
	"registry": {
		"id": "Registry ID",
		"id_help": "Internal iid or the image registry",
		"image": "Image"
	},
	"general": {
		"title": "General",
		"description": "A deployment helps set up and manage multiple replicas of your application, making sure they run smoothly and update safely without interrupting the service to users."
	},
	"deployment": {
		"replicas": "Desired Replicas"
	},
	"disconnect": "Disconnect",
	"networking": {
		"title": "Networking",
		"description": "Set up networking for your deployment",
		"container_port": "Container Port",
		"container_port_help": "The port number your application will be listening incoming traffic within the cluster. If you app is a web server, app server or API server etc. this is the port number you app will listening."
	},
	"pod_config": {
		"title": "Pod Configuration",
		"description": "CPU and memory requests defines the minimum resources each pod needs to start and run smoothly, while limits specify the maximum resources the pod can use to prevent it from using too much and affecting other applications. 1 Core equals to 1000 millicores, you can specify fractional units in case you use cores.A mebibyte is a unit of measure. It represents 1024 x 1024 bytes. A gigibyte is 1024 mebibytes.",
		"cpu_request": "CPU Request",
		"cpu_limit": "CPU Limit",
		"memory_request": "Memory Request",
		"memory_limit": "Memory Limit",
		"restart_policy": "Restart Policy",
		"Always": "Automatically restarts the container(s) after any termination.",
		"OnFailure": "Only restarts the container if it exits with an error (non-zero exit status).",
		"Never": "Does not automatically restart the terminated container."
	},
	"autoscale": {
		"title": "Autoscale Configuration",
		"description": "Autoscaler automatically adjusts the number of pods in a deployment based on observed metrics like CPU or memory usage. This helps ensure that your application has the necessary resources to perform well without over-provisioning and wasting resources. When the actual metric of the pods is up or down the target, the autoscaler adjusts the number of replicas in your deployment.",
		"min_replicas": "Minimum Replicas",
		"max_replicas": "Maximum Replicas",
		"cpu_metric": "CPU Metric",
		"memory_metric": "Memory Metric"
	}
}
