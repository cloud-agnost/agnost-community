apiVersion: apps/v1
kind: Deployment
metadata:
   name: engine-worker-deployment
   labels:
      app: engine-worker
spec:
   replicas: 1
   selector:
      matchLabels:
         app: engine-worker
   template:
      metadata:
         labels:
            app: engine-worker
      spec:
         serviceAccountName: provisioner-sa
         containers:
            - name: engine-worker
              image: agnost-community/engine/worker
              # We will be using the minikube docker daemon, since the actual docker daemon on local machine are different
              # Prevent minikube docker daemon to pull images from central docker hub set imagePullPolicy to Never, so that
              # it uses the image put in minikube's docker environment, see dev.sh script how we change the docker context to minikube
              imagePullPolicy: Never
              ports:
                 - containerPort: 4000
              env:
                 - name: CACHE_HOSTNAME
                   value: redis-master         
                 - name: CACHE_READ_REPLICA_HOSTNAME
                   value: redis-replicas  
                 - name: CACHE_PWD
                   valueFrom:
                      secretKeyRef:
                         name: redis-password
                         key: password
                 - name: CACHE_READ_REPLICA_PWD
                   valueFrom:
                      secretKeyRef:
                         name: redis-password
                         key: password
                 - name: QUEUE_USERNAME
                   valueFrom:
                      secretKeyRef:
                         name: rabbitmq-credentials
                         key: username
                 - name: QUEUE_PASSWORD
                   valueFrom:
                      secretKeyRef:
                         name: rabbitmq-credentials
                         key: password
                 - name: QUEUE_HOST
                   valueFrom:
                      secretKeyRef:
                         name: rabbitmq-credentials
                         key: host
                 - name: CLUSTER_DB_URI
                   valueFrom:
                      secretKeyRef:
                         name: cluster-secrets
                         key: clusterDBURI
                 - name: CLUSTER_DB_USER
                   value: "mongo-user"
                 - name: CLUSTER_DB_PWD
                   valueFrom:
                      secretKeyRef:
                         name: mongodb-admin-password
                         key: password
                 - name: MASTER_TOKEN
                   valueFrom:
                      secretKeyRef:
                         name: cluster-secrets
                         key: masterToken
                 - name: ACCESS_TOKEN
                   valueFrom:
                      secretKeyRef:
                         name: cluster-secrets
                         key: accessToken