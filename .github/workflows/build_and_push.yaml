name: Build and Push

on:
  push:
    branches:
      - 'master'
    paths:
      - 'engine/**'
      - 'platform/**'

env:
  DOCKER_REGISTRY: 'gcr.io'
  GCR_PROJECT: 'agnost-enterprise'

jobs:
  get_apps:
    runs-on: ubuntu-latest
    outputs:
      applications: ${{ steps.filter.outputs.changes }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            engine/core: 'engine/core/**'
            engine/monitor: 'engine/monitor/**'
            engine/realtime: 'engine/realtime/**'
            engine/scheduler: 'engine/scheduler/**'
            engine/worker: 'engine/worker/**'
            platform/core: 'platform/core/**'
            platform/sync: 'platform/sync/**'
            platform/worker: 'platform/worker/**'


  generate_short_sha:
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.short-sha.outputs.sha }}
    steps:
      -
        uses: actions/checkout@v3
      -
        uses: benjlevesque/short-sha@v2.1
        id: short-sha

  build:
    runs-on: ubuntu-latest
    needs: [get_apps, generate_short_sha]
    strategy:
      matrix:
        application: ${{ fromJSON(needs.get_apps.outputs.applications) }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: 'Authenticate to GCP'
        id: 'auth'
        uses: google-github-actions/auth@v0
        with:
          token_format: 'access_token'
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'
      -
        name: Login to GCR
        uses: docker/login-action@v2
        with:
          registry: '${{ env.DOCKER_REGISTRY }}'
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
      -
        name: Build and Push
        uses: docker/build-push-action@v3
        with:
          push: true
          context: ./${{ matrix.application }}
          file: ./${{ matrix.application }}/Dockerfile
          tags: |
            ${{ env.DOCKER_REGISTRY }}/${{ env.GCR_PROJECT }}/${{ matrix.application }}:${{ needs.generate_short_sha.outputs.sha }}
            ${{ env.DOCKER_REGISTRY }}/${{ env.GCR_PROJECT }}/${{ matrix.application }}:latest
