name: Create New Agnost Release

on:
  workflow_dispatch:
    inputs:
      engine-core:
        description: 'Engine Core Release Version'
        required: false
        default: "not-changed"
        type: string
      engine-monitor:
        description: 'Engine Monitor Release Version'
        required: false
        default: "not-changed"
        type: string
      engine-realtime:
        description: 'Engine Realtime Release Version'
        required: false
        default: "not-changed"
        type: string
      engine-scheduler:
        description: 'Engine Scheduler Release Version'
        required: false
        default: "not-changed"
        type: string
      engine-worker:
        description: 'Engine Worker Release Version'
        required: false
        default: "not-changed"
        type: string
      platform-core:
        description: 'Platform Core Release Version'
        required: false
        default: "not-changed"
        type: string
      platform-sync:
        description: 'Platform Sync Release Version'
        required: false
        default: "not-changed"
        type: string
      platform-worker:
        description: 'Platform Worker Release Version'
        required: false
        default: "not-changed"
        type: string
      studio:
        description: 'Studio Release Version'
        required: false
        default: "not-changed"
        type: string

env:
  ENGINE_CORE: '${{ github.event.inputs.engine-core }}'
  ENGINE_MONITOR: '${{ github.event.inputs.engine-monitor }}'
  ENGINE_REALTIME: '${{ github.event.inputs.engine-realtime }}'
  ENGINE_SCHEDULER: '${{ github.event.inputs.engine-scheduler }}'
  ENGINE_WORKER: '${{ github.event.inputs.engine-worker }}'
  PLATFORM_CORE: '${{ github.event.inputs.platform-core }}'
  PLATFORM_SYNC: '${{ github.event.inputs.platform-sync }}'
  PLATFORM_WORKER: '${{ github.event.inputs.platform-worker }}'
  STUDIO: '${{ github.event.inputs.studio }}'
  DOCKER_REGISTRY: 'gcr.io'
  GCR_PROJECT: 'agnost-community'

jobs:
  get_released_apps:
    runs-on: ubuntu-latest
    outputs:
      applications: ${{ steps.get-applications.outputs.APPLICATIONS }}
      details: ${{ steps.get-details.outputs.DETAILS }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      -
        name: get-info
        run: |
          read -r APPLICATIONS DETAILS <<< $(python .github/scripts/get_released_apps.py)
          echo APPLICATIONS=$APPLICATIONS >> $GITHUB_ENV
          echo DETAILS=$DETAILS >> $GITHUB_ENV
      -
        id: get-applications
        run: echo "APPLICATIONS=${{ env.APPLICATIONS }}" >> $GITHUB_OUTPUT
      -
        id: get-details
        run: echo "DETAILS=${{ env.DETAILS }}" >> $GITHUB_OUTPUT
  build:
    runs-on: ubuntu-latest
    needs: get_released_apps
    strategy:
      matrix:
        application: ${{ fromJSON(needs.get_released_apps.outputs.applications) }}
        include: ${{ fromJSON(needs.get_released_apps.outputs.details) }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: 'Authenticate to GCP'
        id: 'auth'
        uses: google-github-actions/auth@v0
        with:
          token_format: 'access_token'
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'
      -
        name: Login to GCR
        uses: docker/login-action@v2
        with:
          registry: '${{ env.DOCKER_REGISTRY }}'
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
      -
        name: Build and Push
        uses: docker/build-push-action@v4
        with:
          push: true
          context: ${{ matrix.rootdir }}/${{ matrix.appdir }}
          file: ${{ matrix.rootdir }}/${{ matrix.appdir }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.DOCKER_REGISTRY }}/${{ env.GCR_PROJECT }}/${{ matrix.application }}:${{ matrix.version }}
            ${{ env.DOCKER_REGISTRY }}/${{ env.GCR_PROJECT }}/${{ matrix.application }}:latest-release
