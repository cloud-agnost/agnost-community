apiVersion: v1
kind: Pod
metadata:
  name: backup
  namespace: default
spec:
  containers:
  - command: ["/bin/sh", "-c", "sleep 90000"]
    env:
    - name: MYSQLSH_USER_CONFIG_HOME
      value: /mysqlsh
    - name: MYSQL_OPERATOR_K8S_CLUSTER_DOMAIN
      value: cluster.local
    image: container-registry.oracle.com/mysql/community-operator:8.2.0-2.1.1
    imagePullPolicy: IfNotPresent
    name: operator-backup-job
    resources: {}
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      privileged: false
      readOnlyRootFilesystem: true
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /mysqlsh
      name: shellhome
    - mountPath: /mysqlsh/.aws
      name: s3-config-volume
      readOnly: true
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-nddqm
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: minikube
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Never
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 27
    runAsGroup: 27
    runAsNonRoot: true
    runAsUser: 27
  serviceAccount: mycluster-sa
  serviceAccountName: mycluster-sa
  terminationGracePeriodSeconds: 60
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - emptyDir: {}
    name: shellhome
  - name: s3-config-volume
    secret:
      defaultMode: 420
      secretName: s3-secrets-12sdaf231
  - name: kube-api-access-nddqm
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
